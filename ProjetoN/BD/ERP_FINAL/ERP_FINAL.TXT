/******************************************************************************/
/***          Generated by IBExpert 2012.02.21 23/11/2015 23:56:54          ***/
/******************************************************************************/

SET SQL DIALECT 3;

SET NAMES UTF8;

SET CLIENTLIB 'C:\Program Files (x86)\Firebird\Firebird_2_5\bin\fbclient.dll';

CREATE DATABASE 'C:\Users\Paulo\Desktop\Delphi\Projeto - ERP Necessauro\trunk\ProjetoN\BD\ERP_FINAL.FDB'
USER 'SYSDBA' PASSWORD 'masterkey'
PAGE_SIZE 4096
DEFAULT CHARACTER SET UTF8 COLLATION UTF8;



/******************************************************************************/
/***                                Domains                                 ***/
/******************************************************************************/

CREATE DOMAIN DMCELULAR AS
VARCHAR(12);

CREATE DOMAIN DMCEP AS
VARCHAR(9);

CREATE DOMAIN DMCNPJ AS
VARCHAR(14);

CREATE DOMAIN DMCPF AS
VARCHAR(11);

CREATE DOMAIN DMINSCESTADUAL AS
VARCHAR(9);

CREATE DOMAIN DMINSCMUNICIPAL AS
VARCHAR(15);

CREATE DOMAIN DMTELEFONE AS
VARCHAR(14);

CREATE DOMAIN NEW_DOMAIN AS
VARCHAR(10);



/******************************************************************************/
/***                               Generators                               ***/
/******************************************************************************/

CREATE GENERATOR GEN_BLOCO;
SET GENERATOR GEN_BLOCO TO 4;

CREATE GENERATOR GEN_CATEGORIA;
SET GENERATOR GEN_CATEGORIA TO 5;

CREATE GENERATOR GEN_CENTRODECUSTO_ID;
SET GENERATOR GEN_CENTRODECUSTO_ID TO 3;

CREATE GENERATOR GEN_CHAMADO;
SET GENERATOR GEN_CHAMADO TO 24;

CREATE GENERATOR GEN_CONDICAOPAGAMENTO_ID;
SET GENERATOR GEN_CONDICAOPAGAMENTO_ID TO 0;

CREATE GENERATOR GEN_CONTABANCARIA_ID;
SET GENERATOR GEN_CONTABANCARIA_ID TO 0;

CREATE GENERATOR GEN_DEPARTAMENTO_ID;
SET GENERATOR GEN_DEPARTAMENTO_ID TO 2;

CREATE GENERATOR GEN_EMPRESA_ID;
SET GENERATOR GEN_EMPRESA_ID TO 0;

CREATE GENERATOR GEN_ENTREGA_MATERIA_ID;
SET GENERATOR GEN_ENTREGA_MATERIA_ID TO 0;

CREATE GENERATOR GEN_ESTOQUE;
SET GENERATOR GEN_ESTOQUE TO 0;

CREATE GENERATOR GEN_ESTOQ_MOVIMENTO;
SET GENERATOR GEN_ESTOQ_MOVIMENTO TO 0;

CREATE GENERATOR GEN_FICHA;
SET GENERATOR GEN_FICHA TO 1;

CREATE GENERATOR GEN_HISTORICO_ID;
SET GENERATOR GEN_HISTORICO_ID TO 5;

CREATE GENERATOR GEN_LANCAMENTOS_ID;
SET GENERATOR GEN_LANCAMENTOS_ID TO 52;

CREATE GENERATOR GEN_MARCAS;
SET GENERATOR GEN_MARCAS TO 2;

CREATE GENERATOR GEN_ORDEM;
SET GENERATOR GEN_ORDEM TO 1;

CREATE GENERATOR GEN_PESSOAS;
SET GENERATOR GEN_PESSOAS TO 0;

CREATE GENERATOR GEN_PESSOAS_ID;
SET GENERATOR GEN_PESSOAS_ID TO 0;

CREATE GENERATOR GEN_PLANODECONTAS_ID;
SET GENERATOR GEN_PLANODECONTAS_ID TO 6;

CREATE GENERATOR GEN_PRATELEIRA;
SET GENERATOR GEN_PRATELEIRA TO 5;

CREATE GENERATOR GEN_PRODUCAO_ID;
SET GENERATOR GEN_PRODUCAO_ID TO 1;

CREATE GENERATOR GEN_PRODUTOS;
SET GENERATOR GEN_PRODUTOS TO 1;

CREATE GENERATOR GEN_SEQUENCIA;
SET GENERATOR GEN_SEQUENCIA TO 1;

CREATE GENERATOR GEN_TIPOPAGAMENTO_ID;
SET GENERATOR GEN_TIPOPAGAMENTO_ID TO 0;

CREATE GENERATOR GEN_TIPO_ERRO;
SET GENERATOR GEN_TIPO_ERRO TO 28;

CREATE GENERATOR GEN_TITULOSP_ID;
SET GENERATOR GEN_TITULOSP_ID TO 0;

CREATE GENERATOR GEN_TITULO_RECEBER_ID;
SET GENERATOR GEN_TITULO_RECEBER_ID TO 0;

CREATE GENERATOR GEN_UNIDADE;
SET GENERATOR GEN_UNIDADE TO 1;

CREATE GENERATOR GEN_VENDA;
SET GENERATOR GEN_VENDA TO 1;

CREATE GENERATOR SEQCOTACAO;
SET GENERATOR SEQCOTACAO TO 0;

CREATE GENERATOR SEQPEDCOMPRA;
SET GENERATOR SEQPEDCOMPRA TO 0;

CREATE GENERATOR SEQSOLCOMPRA;
SET GENERATOR SEQSOLCOMPRA TO 0;



SET TERM ^ ; 



/******************************************************************************/
/***                           Stored Procedures                            ***/
/******************************************************************************/

CREATE OR ALTER PROCEDURE ESTOQUE_DELETA_TUDO
AS
BEGIN
  EXIT;
END^






SET TERM ; ^



/******************************************************************************/
/***                                 Tables                                 ***/
/******************************************************************************/



CREATE TABLE BANCO (
    BAN_CODIGO     INTEGER NOT NULL,
    BAN_DESCRICAO  VARCHAR(100)
);

CREATE TABLE BENS_IMOBILIZADOS (
    BNI_EMPRESA             INTEGER NOT NULL,
    BNI_CODIGO              INTEGER NOT NULL,
    BNI_NUM_SERIE           INTEGER NOT NULL,
    BNI_NR_NOTA             INTEGER NOT NULL,
    BNI_FORNECEDOR          INTEGER NOT NULL,
    BNI_DESCRICAO           VARCHAR(100) NOT NULL,
    BNI_TIPO                INTEGER NOT NULL,
    BNI_LOCALIZACAO         INTEGER NOT NULL,
    BNI_ESTADO_CONSERVACAO  INTEGER NOT NULL,
    BNI_MANUTENCAO          INTEGER,
    BNI_DATA_AQUISICAO      DATE NOT NULL,
    BNI_VLR_AQUISICAO       NUMERIC(18,2) DEFAULT 0.00 NOT NULL,
    BNI_VLR_RESIDUAL        NUMERIC(18,2) DEFAULT 0.00 NOT NULL,
    BNI_VLR_AGREGADO        NUMERIC(18,2) DEFAULT 0.00 NOT NULL,
    BNI_VLR_ATUAL           NUMERIC(18,2) DEFAULT 0.00 NOT NULL,
    BNI_DEPRECIACAO         NUMERIC(18,2) DEFAULT 0.00 NOT NULL,
    BNI_OBSERVACAO          BLOB SUB_TYPE 0 SEGMENT SIZE 80,
    BNI_STATUS              VARCHAR(1) default 'A' NOT NULL
);

CREATE TABLE BLOCO (
    BLOC_EMPRESA    INTEGER NOT NULL,
    BLOC_CODIGO     INTEGER NOT NULL,
    BLOC_DESCRICAO  VARCHAR(60) NOT NULL,
    BLOC_OBS        VARCHAR(100),
    BLOC_QTDMAXIMA  INTEGER NOT NULL,
    BLOC_CATEGORIA  INTEGER NOT NULL
);

CREATE TABLE CATEGORIA (
    CAT_EMPRESA    INTEGER NOT NULL,
    CAT_CODIGO     INTEGER NOT NULL,
    CAT_DESCRICAO  VARCHAR(60) NOT NULL,
    CAT_NCM        VARCHAR(20),
    CAT_OBS        VARCHAR(100)
);

CREATE TABLE CENTRODECUSTO (
    CEC_COD        INTEGER NOT NULL,
    CEC_COD_GRUPO  INTEGER NOT NULL,
    CEC_NUM_CC     VARCHAR(9) NOT NULL,
    CEC_DESC_CC    VARCHAR(60) NOT NULL,
    CEC_ANALITICO  VARCHAR(1)
);

CREATE TABLE CHAMADOS (
    CHA_CODIGO        INTEGER NOT NULL,
    CHA_EMPRESA       INTEGER NOT NULL,
    CHA_DEPARTAMENTO  INTEGER NOT NULL,
    CHA_FUNCIONARIO   INTEGER NOT NULL,
    CHA_PROPRIETARIO  INTEGER NOT NULL,
    CHA_DESCRICAO     VARCHAR(100),
    CHA_PRIORIDADE    VARCHAR(20) default 'Normal' NOT NULL,
    CHA_STATUS        VARCHAR(15) default 'Analise' NOT NULL,
    CHA_DATA_ENTRADA  DATE,
    CHA_TIPO_ERRO     INTEGER NOT NULL,
    CHA_DATA_SAIDA    DATE
);

CREATE TABLE COMPONENTE (
    COM_EMPRESA         INTEGER NOT NULL,
    COM_MANUTENCAO      INTEGER NOT NULL,
    COM_CODIGO          VARCHAR(30) NOT NULL,
    COM_OBSERVACAO      BLOB SUB_TYPE 0 SEGMENT SIZE 80,
    COM_VLR_COMPONENTE  FLOAT DEFAULT 0 NOT NULL
);

CREATE TABLE CONDICAOPAGAMENTO (
    CDP_CODIGO           INTEGER NOT NULL,
    CDP_DESCRICAO        VARCHAR(100),
    CDP_PARCELAS         INTEGER,
    CDP_DIAS_VENCIMENTO  INTEGER
);

CREATE TABLE CONTABANCARIA (
    CTB_CODIGO      INTEGER NOT NULL,
    CTB_EMP_CODIGO  INTEGER NOT NULL,
    CTB_BAN_CODIGO  INTEGER NOT NULL,
    CTB_CONTA       VARCHAR(20),
    CTB_AGENCIA     VARCHAR(20),
    CTB_SALDO       NUMERIC(18,2),
    CTB_PESSOA      INTEGER NOT NULL
);

CREATE TABLE COTACAO (
    COT_EMPRESA             INTEGER NOT NULL,
    COT_CODIGO              INTEGER NOT NULL,
    COT_DEPARTAMENTO        INTEGER NOT NULL,
    COT_DESCRICAO           VARCHAR(40) NOT NULL,
    COT_STATUS              VARCHAR(1) NOT NULL,
    COT_DATA                DATE NOT NULL,
    COT_OBS                 BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    COT_PRODUTO             VARCHAR(30),
    COT_QTD                 NUMERIC(10,2),
    COT_SOLICITACAO_ORIGEM  INTEGER
);

CREATE TABLE DEPARTAMENTO (
    DEP_COD       INTEGER NOT NULL,
    DEP_EMPRESAR  INTEGER NOT NULL,
    DEP_NOME      VARCHAR(40) NOT NULL,
    DEP_DESC      VARCHAR(60) NOT NULL
);

CREATE TABLE EMISSAO_NFE (
    EMI_NUMERO            INTEGER NOT NULL,
    EMI_NOTAFISCAL        NUMERIC(9,0),
    EMI_EMPRESA           INTEGER NOT NULL,
    EMI_SERIE             NUMERIC(9,0),
    EMI_TIPOMOVIMENTACAO  INTEGER NOT NULL,
    EMI_DESCRICAO         VARCHAR(60) NOT NULL,
    EMI_PESSOA            VARCHAR(60) NOT NULL,
    EMI_DTEMISSAO         DATE,
    EMI_DTSAIDA           DATE
);

CREATE TABLE EMPRESA (
    EMP_COD       INTEGER NOT NULL,
    EMP_CNPJ      DMCNPJ NOT NULL,
    EMP_RAZAO     VARCHAR(60) NOT NULL,
    EMP_NOMEF     VARCHAR(60) NOT NULL,
    EMP_ENDERECO  VARCHAR(60),
    EMP_END_NUM   INTEGER,
    EMP_BAIRRO    VARCHAR(20),
    EMP_CIDADE    VARCHAR(60) NOT NULL,
    EMP_UF        VARCHAR(2),
    EMP_CEP       DMCEP NOT NULL,
    EMP_FONE      DMTELEFONE,
    EMP_TITULAR   VARCHAR(60) NOT NULL
);

CREATE TABLE ENTREGA_MATERIA (
    EM0_COD         INTEGER NOT NULL,
    EM0_PESSOA      INTEGER NOT NULL,
    EM0_PRODUCAO    INTEGER NOT NULL,
    EM0_DESCRICAO   VARCHAR(30),
    EM0_DT_ENTREGA  DATE,
    EM0_EMPRESA     INTEGER NOT NULL
);

CREATE TABLE ESTADO_DE_CONSERVACAO (
    EDC_CODIGO     INTEGER NOT NULL,
    EDC_DESCRICAO  VARCHAR(100) NOT NULL,
    EDC_STATUS     VARCHAR(1) default 'A' NOT NULL
);

CREATE TABLE ESTOQ_MOVIMENTO (
    EM_EMPRESA             INTEGER NOT NULL,
    EM_PRODUTO             VARCHAR(30) NOT NULL,
    EM_BLOCO               INTEGER NOT NULL,
    EM_PRATELEIRA          INTEGER NOT NULL,
    EM_ESTOQUE             INTEGER NOT NULL,
    EM_CODIGO              INTEGER NOT NULL,
    EM_TIPO                VARCHAR(2) NOT NULL,
    EM_QTD                 NUMERIC(18,2) DEFAULT 0.0 NOT NULL,
    EM_DATA                TIMESTAMP DEFAULT CURRENT_DATE,
    EM_OBS                 VARCHAR(100),
    EM_VALOR_FINANCEIRO    NUMERIC(18,2) DEFAULT 0.0,
    EM_PEDIDOCOMPRAORIGEM  INTEGER
);

CREATE TABLE ESTOQUE (
    ESTOQ_EMPRESA     INTEGER NOT NULL,
    ESTOQ_PRODUTO     VARCHAR(30) NOT NULL,
    ESTOQ_BLOCO       INTEGER NOT NULL,
    ESTOQ_PRATELEIRA  INTEGER NOT NULL,
    ESTOQ_CODIGO      INTEGER NOT NULL,
    ESTOQ_STATUS      VARCHAR(2) DEFAULT 'A',
    ESTOQ_QTD         NUMERIC(18,2) DEFAULT 0.0 NOT NULL,
    ESTOQ_QTDMIN      NUMERIC(18,2) DEFAULT 0.0,
    ESTOQ_QTDMAX      NUMERIC(18,2) DEFAULT 0.0,
    ESTOQ_CUSTOMEDIO  NUMERIC(18,2) DEFAULT 0.0,
    ESTOQ_CATEGORIA   INTEGER,
    ESTOQ_TIPO        INTEGER,
    ESTOQ_DTCADASTRO  DATE DEFAULT CURRENT_DATE,
    ESTOQ_OBS         VARCHAR(100),
    ESTOQ_CHAVE       VARCHAR(10)
);

CREATE TABLE FATURAMENTO (
    FAT_CODIGO_PEDIDO  INTEGER NOT NULL,
    FAT_DESCRICAO      VARCHAR(60),
    FAT_EMPRESA        INTEGER NOT NULL,
    FAT_PESSOA         INTEGER NOT NULL,
    FAT_NOTA           INTEGER,
    FAT_NOTASERIE      INTEGER,
    FAT_DTEMISSAO      DATE,
    FAT_DTSAIDA        DATE,
    FAT_SITAUCAO       VARCHAR(5) DEFAULT 'A',
    FAT_CHAVE_ACESSO   NUMERIC(9,0)
);

CREATE TABLE FICHA_TECNICA (
    FT_COD             INTEGER NOT NULL,
    FT_PRODUTO         VARCHAR(30) NOT NULL,
    FT_UNIDADE         INTEGER,
    FT_CUSTO_UNITARIO  NUMERIC(18,4),
    FT_MAO_DE_OBRA     NUMERIC(18,4),
    FT_QUANTIDADE      INTEGER,
    FT_CUSTO_TOTAL     NUMERIC(18,4),
    FT_TEMPO_PRODUCAO  TIMESTAMP,
    FT_EMPRESA         INTEGER NOT NULL
);

CREATE TABLE FORNEC_COTACAO (
    FCT_EMPRESA       INTEGER NOT NULL,
    FCT_COTACAO       INTEGER NOT NULL,
    FCT_FORNECEDOR    INTEGER NOT NULL,
    FCT_VENCEDOR      VARCHAR(1) DEFAULT 'N' NOT NULL,
    FCT_VLR_UNITARIO  NUMERIC(18,4) DEFAULT 0 NOT NULL,
    FCT_VLR_FRETE     NUMERIC(18,4) DEFAULT 0 NOT NULL,
    FCT_DT_ENTREGA    DATE,
    FCT_UND_MEDIDA    INTEGER
);

CREATE TABLE HISTORICO (
    HIST_COD   INTEGER NOT NULL,
    HIST_NOME  VARCHAR(20) NOT NULL
);

CREATE TABLE ITEM_NOTA_ENTRADA (
    INE_EMPRESA       INTEGER NOT NULL,
    INE_NR_NOTA       INTEGER NOT NULL,
    INE_PESSOA        INTEGER NOT NULL,
    INE_PRODUTO       VARCHAR(30) NOT NULL,
    INE_VLR_BRUTO     NUMERIC(18,2) DEFAULT 0.00 NOT NULL,
    INE_VLR_DESC      NUMERIC(18,2) DEFAULT 0.00 NOT NULL,
    INE_VLR_LIQUIDO   NUMERIC(18,2) DEFAULT 0.00 NOT NULL,
    INE_VLR_PIS       NUMERIC(18,2) DEFAULT 0.00 NOT NULL,
    INE_VLR_ICMS      NUMERIC(18,2) DEFAULT 0.00 NOT NULL,
    INE_VLR_TOTAL     NUMERIC(18,2) DEFAULT 0.00 NOT NULL,
    INE_QTD           NUMERIC(18,2) default 0.00 NOT NULL,
    INE_VLR_UNITARIO  NUMERIC(18,4) default 0.00 NOT NULL
);

CREATE TABLE ITENS_FICHA (
    IFT_FICHA         INTEGER NOT NULL,
    IFT_PRODUTO       VARCHAR(30),
    IFT_EMPRESA       INTEGER NOT NULL,
    IFT_QTD_TOTAL     NUMERIC(18,4),
    IFT_DESCRICAO     VARCHAR(30),
    IFT_VLR_UNITARIO  NUMERIC(18,4),
    IFT_VLR_TOTAL     NUMERIC(18,4)
);

CREATE TABLE LANCAMENTOS (
    LANC_EMP               INTEGER NOT NULL,
    LANC_NR_LOTE           INTEGER NOT NULL,
    LANC_NR_LANCAMENTO     INTEGER NOT NULL,
    LANC_DT_LANCAMENTO     DATE NOT NULL,
    LANC_DEBITO            VARCHAR(8),
    LANC_CENTRODECUSTO_DB  VARCHAR(9),
    LANC_CREDITO           VARCHAR(8),
    LANC_CENTRODECUSTO_CR  VARCHAR(9),
    LANC_HISTORICO         VARCHAR(100) NOT NULL,
    LANC_VAR_HISTORICO     VARCHAR(100),
    LANC_VALOR             NUMERIC(18,2) NOT NULL,
    LANC_TIPO              VARCHAR(1) NOT NULL
);

CREATE TABLE LOCALIZACAO (
    LOC_CODIGO     INTEGER NOT NULL,
    LOC_DESCRICAO  VARCHAR(100) NOT NULL,
    LOC_STATUS     VARCHAR(1) DEFAULT 'A' NOT NULL
);

CREATE TABLE MANUTENCAO (
    MAN_EMPRESA         INTEGER NOT NULL,
    MAN_CODIGO          INTEGER NOT NULL,
    MAN_BEN             INTEGER NOT NULL,
    MAN_DESCRICAO       VARCHAR(100) NOT NULL,
    MAN_OBSERVACAO      BLOB SUB_TYPE 0 SEGMENT SIZE 80,
    MAN_VLR_COMPONENTE  NUMERIC(18,2) DEFAULT 0.00 NOT NULL,
    MAN_VLR_MANUTENCAO  NUMERIC(18,2) DEFAULT 0.00 NOT NULL,
    MAN_VLR_TOTAL       NUMERIC(18,2) DEFAULT 0.00 NOT NULL,
    MAN_AGREGA_CUSTO    VARCHAR(1) DEFAULT 'S' NOT NULL,
    MAN_NUM_SERIE       INTEGER NOT NULL
);

CREATE TABLE MARCAS (
    MARC_CODIGO     INTEGER NOT NULL,
    MARC_DESCRICAO  VARCHAR(60) NOT NULL,
    MARC_OBS        VARCHAR(100)
);

CREATE TABLE NOTA_ENTRADA (
    NTE_EMPRESA    INTEGER NOT NULL,
    NTE_NR_NOTA    INTEGER NOT NULL,
    NTE_PESSOA     INTEGER NOT NULL,
    NTE_DATA       DATE NOT NULL,
    NTE_VLR_FRETE  NUMERIC(18,2) DEFAULT 0.00 NOT NULL,
    NTE_VLR_PIS    NUMERIC(18,2) DEFAULT 0.00 NOT NULL,
    NTE_VLR_ICMS   NUMERIC(18,2) DEFAULT 0.00 NOT NULL,
    NTE_VLR_TOTAL  NUMERIC(18,2) DEFAULT 0.00 NOT NULL
);

CREATE TABLE ORDEM_PRODUCAO (
    OP_VENDAS        INTEGER,
    OP_EMPRESA       INTEGER NOT NULL,
    OP_FICHATECNICA  INTEGER,
    OP_DESCRICAO     VARCHAR(50),
    OP_TIPO          VARCHAR(30),
    OP_QTD           INTEGER,
    OP_DT_PEDIDO     DATE,
    OP_DT_ENTREGA    DATE,
    OP_STATUS        VARCHAR(1) default'A',
    OP_COMPRAS       INTEGER,
    OP_COD           INTEGER NOT NULL,
    OP_PRODUTO       VARCHAR(30) NOT NULL,
    OP_DEPARTAMENTO  INTEGER NOT NULL
);

CREATE TABLE PEDIDO_COMPRA (
    PDC_EMPRESA             INTEGER NOT NULL,
    PDC_CODIGO              INTEGER NOT NULL,
    PDC_DEPARTAMENTO        INTEGER NOT NULL,
    PDC_PRODUTO             VARCHAR(30) NOT NULL,
    PDC_FORNECEDOR          INTEGER NOT NULL,
    PDC_PREV_ENTREGA        DATE,
    PDC_VLR_FRETE           NUMERIC(18,4) DEFAULT 0 NOT NULL,
    PDC_VLR_UNITARIO        NUMERIC(18,4) DEFAULT 0 NOT NULL,
    PDC_VLR_BRUTO           NUMERIC(18,4) DEFAULT 0 NOT NULL,
    PDC_VLR_DESCONTO        NUMERIC(18,4) DEFAULT 0 NOT NULL,
    PDC_VLR_LIQUIDO         NUMERIC(18,4) DEFAULT 0 NOT NULL,
    PDC_VLR_TOTAL           NUMERIC(18,4) DEFAULT 0 NOT NULL,
    PDC_STATUS              VARCHAR(1) DEFAULT 'A' NOT NULL,
    PDC_DATA                DATE NOT NULL,
    PDC_QTD_TOTAL           NUMERIC(10,2) DEFAULT 0 NOT NULL,
    PDC_DATA_ENTREGA        DATE,
    PDC_OBS                 BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    PDC_UNMEDIDA            INTEGER NOT NULL,
    PDC_COTACAO_ORIGEM      INTEGER,
    PDC_SOLICITICAO_ORIGEM  INTEGER,
    PDC_CONDICAO_PGTO       INTEGER NOT NULL
);

CREATE TABLE PEDIDOVENDA (
    PED_NUMERO            INTEGER NOT NULL,
    PED_PESSOA            VARCHAR(60) NOT NULL,
    PED_SEQUENCIA         INTEGER,
    PED_SITUACAO          VARCHAR(5) DEFAULT 'A',
    PED_EMPRESA           INTEGER NOT NULL,
    PED_DEPOSITO          INTEGER NOT NULL,
    PED_PRODUTO           INTEGER NOT NULL,
    PED_DESCRICAO         VARCHAR(60),
    PED_TIPOMOVIMENTACAO  INTEGER NOT NULL,
    PED_TIPODESCRICAO     VARCHAR(30),
    PED_UNIDADE           INTEGER,
    PED_QUANTIDADE        NUMERIC(18,2) DEFAULT 0.0,
    PED_LISTA_PRECO       NUMERIC(18,2),
    PED_DESCONTO          NUMERIC(18,2),
    PED_QTD_DISPONIVEL    NUMERIC(18,2) DEFAULT 0.0,
    PED_VLRUNITARIO       NUMERIC(18,2),
    PED_VLRTOTAL          NUMERIC(18,2),
    PED_REAJUSTE          NUMERIC(18,2),
    PED_DTPEDIDO          DATE,
    PED_DTENTRADA         DATE,
    PED_DTPRAZOENTREGA    DATE,
    PED_ORDEMVENDA        INTEGER NOT NULL
);

CREATE TABLE PESSOAS (
    PESS_CODIGO         INTEGER NOT NULL,
    PESS_NOME           VARCHAR(100),
    PESS_TIPO           CHAR(1),
    PESS_APELIDO        VARCHAR(60),
    PESS_CONTATO        VARCHAR(60),
    PESS_TELCONTATO     VARCHAR(15),
    PESS_TEL1           VARCHAR(15),
    PESS_TEL2           VARCHAR(15),
    PESS_TEL3           VARCHAR(15),
    PESS_FAX            VARCHAR(12),
    PESS_RAMAL          INTEGER,
    PESS_CNPJ           VARCHAR(14),
    PESS_CPF            VARCHAR(11),
    PESS_RG             VARCHAR(10),
    PESS_INSCESTADUAL   VARCHAR(9),
    PESS_INSCMUNICIPAL  VARCHAR(15),
    PESS_EMAIL          VARCHAR(60),
    PESS_DTCADASTRO     TIMESTAMP NOT NULL,
    PESS_LOGRADOURO     VARCHAR(60),
    PESS_BAIRRO         VARCHAR(30),
    PESS_COMPLEMENTO    VARCHAR(30),
    PESS_NR             VARCHAR(5),
    PESS_CIDADE         VARCHAR(20) DEFAULT 'PR',
    PESS_UF             VARCHAR(2),
    PESS_PAIS           VARCHAR(20) DEFAULT 'BRASIL'
);

CREATE TABLE PLANODECONTAS (
    PLN_COD_CONTA   INTEGER NOT NULL,
    PLN_CONTA       VARCHAR(8) NOT NULL,
    PLN_DESC_CONTA  VARCHAR(20) NOT NULL,
    PLN_ANALITICA   VARCHAR(1)
);

CREATE TABLE PRATELEIRA (
    PRAT_EMPRESA    INTEGER NOT NULL,
    PRAT_BLOCO      INTEGER NOT NULL,
    PRAT_CODIGO     INTEGER NOT NULL,
    PRAT_DESCRICAO  VARCHAR(60) NOT NULL,
    PRAT_OBS        VARCHAR(100),
    PRAT_QTDMAXIMA  INTEGER NOT NULL,
    PRAT_CATEGORIA  INTEGER NOT NULL
);

CREATE TABLE PRODUCAO (
    PROD_ORDEM          INTEGER NOT NULL,
    PROD_DESCRICAO      VARCHAR(30),
    PROD_TIPO           VARCHAR(30),
    PROD_DT_INICIO      DATE,
    PROD_DT_TERMINO     DATE,
    PROD_QTD_PRODUZIDA  INTEGER,
    PROD_STATUS         VARCHAR(30),
    PROD_EMPRESA        INTEGER NOT NULL,
    PROD_COD            INTEGER NOT NULL,
    PROD_PRODUTO        VARCHAR(30) NOT NULL
);

CREATE TABLE PRODUTOS (
    PRO_EMPRESA       INTEGER NOT NULL,
    PRO_CODIGO        VARCHAR(30) NOT NULL,
    PRO_CODREF        VARCHAR(30),
    PRO_CODBARRAS     VARCHAR(60),
    PRO_STATUS        VARCHAR(5) DEFAULT 'A',
    PRO_DTCADASTRO    DATE DEFAULT CURRENT_DATE,
    PRO_CLASSFISCAL   VARCHAR(30),
    PRO_CSTCSOSN      VARCHAR(30),
    PRO_NCMSH         VARCHAR(30),
    PRO_EXTIPI        VARCHAR(30),
    PRO_SITTRIB       VARCHAR(30),
    PRO_PIS           VARCHAR(20),
    PRO_COFINS        VARCHAR(18),
    PRO_CSTPIS        VARCHAR(18),
    PRO_ESTATUAL      VARCHAR(20),
    PRO_DESCRICAO     VARCHAR(60) NOT NULL,
    PRO_UNID          INTEGER,
    PRO_MARCA         INTEGER,
    PRO_MOEDA         VARCHAR(10),
    PRO_CATEGORIA     INTEGER NOT NULL,
    PRO_PESO          NUMERIC(18,2) DEFAULT 0.0,
    PRO_CUSTOMEDIO    NUMERIC(18,2) DEFAULT 0.0,
    PRO_VALORIZACAO   NUMERIC(18,2) DEFAULT 0.0,
    PRO_VLRFRETE      NUMERIC(18,2) DEFAULT 0.0,
    PRO_PERCENCARG    NUMERIC(18,2) DEFAULT 0.0,
    PRO_VLRENCARG     NUMERIC(18,2) DEFAULT 0.0,
    PRO_PERCMARGLUCR  NUMERIC(18,2) DEFAULT 0.0,
    PRO_VLRMARGLUCR   NUMERIC(18,2) DEFAULT 0.0,
    PRO_VLRVENDA      NUMERIC(18,2) DEFAULT 0.0,
    PRO_OBS           VARCHAR(100),
    PRO_IMG           BLOB SUB_TYPE 0 SEGMENT SIZE 4096,
    PRO_GRUPO         CHAR(1)
);

CREATE TABLE SOLICITACAO_COMPRA (
    SOL_EMPRESA         INTEGER NOT NULL,
    SOL_CODIGO          INTEGER NOT NULL,
    SOL_DEPARTAMENTO    INTEGER NOT NULL,
    SOL_PRODUTO         VARCHAR(30) NOT NULL,
    SOL_QTD             NUMERIC(10,2) DEFAULT 0 NOT NULL,
    SOL_DATA            DATE NOT NULL,
    SOL_DATA_URGENCIA   DATE,
    SOL_OBS             BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    SOL_DATA_LIBERACAO  DATE,
    SOL_STATUS          VARCHAR(1) DEFAULT 'A' NOT NULL
);

CREATE TABLE TIPO_DE_BENS (
    TPB_CODIGO     INTEGER NOT NULL,
    TPB_DESCRICAO  VARCHAR(100) NOT NULL,
    TPB_STATUS     VARCHAR(1) default 'A' NOT NULL
);

CREATE TABLE TIPOPAGAMENTO (
    TPG_CODIGO     INTEGER NOT NULL,
    TPG_DESCRICAO  VARCHAR(100)
);

CREATE TABLE TIPOS_ERROS (
    TER_CODIGO     INTEGER NOT NULL,
    TER_DESCRICAO  VARCHAR(20) NOT NULL
);

CREATE TABLE TITULO_RECEBER (
    TTR_CODIGO           INTEGER NOT NULL,
    TTR_EMP_CODIGO       INTEGER NOT NULL,
    TTR_PES_CODIGO       INTEGER,
    TTR_CTB_CODIGO       INTEGER,
    TTR_CON_CODIGO       INTEGER,
    TTR_DESCRICAO        VARCHAR(100),
    TTR_DT_EMISSAO       DATE,
    TTR_DT_VENCIMENTO    DATE,
    TTR_DT_PAGAMENTO     DATE,
    TTR_DT_BAIXA         DATE,
    TTR_DT_CANCELAMENTO  DATE,
    TTR_TP_TITULO        VARCHAR(30),
    TTR_DESCONTO         NUMERIC(18,2),
    TTR_PARCELA          NUMERIC(10,2),
    TTR_VL_ORIGINAL      NUMERIC(18,2),
    TTR_VL_PAGO          NUMERIC(18,2),
    TTR_VL_TOTAL         NUMERIC(18,2),
    TTR_MR_DIARIA        NUMERIC(18,2),
    TTR_MT_ATRASO        NUMERIC(18,2),
    TTR_SITUACAO         VARCHAR(1) DEFAULT 'A',
    TTR_TP_MORA          VARCHAR(1) DEFAULT 'P',
    TTR_TP_MULTA         VARCHAR(1) DEFAULT 'P'
);

CREATE TABLE TITULOSP (
    TTP_CODIGO           INTEGER NOT NULL,
    TTP_EMP_CODIGO       INTEGER NOT NULL,
    TTP_PES_CODIGO       INTEGER,
    TTP_CTB_CODIGO       INTEGER,
    TTP_CON_CODIGO       INTEGER,
    TTP_DESCRICAO        VARCHAR(100),
    TTP_DT_EMISSAO       DATE,
    TTP_DT_VENCIMENTO    DATE,
    TTP_DT_PAGAMENTO     DATE,
    TTP_DT_BAIXA         DATE,
    TTP_DT_CANCELAMENTO  DATE,
    TTP_TP_TITULO        VARCHAR(30),
    TTP_DESCONTO         NUMERIC(18,2),
    TTP_PARCELA          NUMERIC(10,2),
    TTP_VL_ORIGINAL      NUMERIC(18,2),
    TTP_VL_PAGO          NUMERIC(18,2),
    TTP_VL_TOTAL         NUMERIC(18,2),
    TTP_MR_DIARIA        NUMERIC(18,2),
    TTP_MT_ATRASO        NUMERIC(18,2),
    TTP_SITUACAO         VARCHAR(1) DEFAULT 'A',
    TTP_TP_MORA          VARCHAR(1) DEFAULT 'P',
    TTP_TP_MULTA         VARCHAR(1) DEFAULT 'P'
);

CREATE TABLE UNIDADE (
    UN_CODIGO     INTEGER NOT NULL,
    UN_DESCRICAO  VARCHAR(60) NOT NULL,
    UN_OBS        VARCHAR(100)
);



/******************************************************************************/
/***                              Primary Keys                              ***/
/******************************************************************************/

ALTER TABLE BANCO ADD CONSTRAINT PK_BANCO PRIMARY KEY (BAN_CODIGO);
ALTER TABLE BENS_IMOBILIZADOS ADD CONSTRAINT PK_BENS_IMOBILIZADOS PRIMARY KEY (BNI_EMPRESA, BNI_CODIGO, BNI_NUM_SERIE);
ALTER TABLE BLOCO ADD CONSTRAINT PK_BLOCO PRIMARY KEY (BLOC_EMPRESA, BLOC_CODIGO);
ALTER TABLE CATEGORIA ADD CONSTRAINT PK_CATEGORIA PRIMARY KEY (CAT_EMPRESA, CAT_CODIGO);
ALTER TABLE CENTRODECUSTO ADD CONSTRAINT PK_CENTRODECUSTO PRIMARY KEY (CEC_COD);
ALTER TABLE CHAMADOS ADD CONSTRAINT PK_CHA_CODIGO PRIMARY KEY (CHA_CODIGO, CHA_EMPRESA, CHA_DEPARTAMENTO);
ALTER TABLE COMPONENTE ADD CONSTRAINT PK_COMPONENTE PRIMARY KEY (COM_EMPRESA, COM_CODIGO);
ALTER TABLE CONDICAOPAGAMENTO ADD CONSTRAINT PK_CONDICAOPAGAMENTO PRIMARY KEY (CDP_CODIGO);
ALTER TABLE CONTABANCARIA ADD CONSTRAINT PK_CONTABANCARIA PRIMARY KEY (CTB_CODIGO);
ALTER TABLE COTACAO ADD CONSTRAINT PK_COTACAO PRIMARY KEY (COT_EMPRESA, COT_CODIGO);
ALTER TABLE DEPARTAMENTO ADD CONSTRAINT PK_DEPARTAMENTO PRIMARY KEY (DEP_COD);
ALTER TABLE EMISSAO_NFE ADD CONSTRAINT PK_EMISSAO_NFE PRIMARY KEY (EMI_NUMERO, EMI_TIPOMOVIMENTACAO, EMI_PESSOA, EMI_EMPRESA);
ALTER TABLE EMPRESA ADD CONSTRAINT PK_EMPRESA PRIMARY KEY (EMP_COD);
ALTER TABLE ENTREGA_MATERIA ADD CONSTRAINT PK_ENTREGA_MATERIA PRIMARY KEY (EM0_COD, EM0_EMPRESA);
ALTER TABLE ESTADO_DE_CONSERVACAO ADD CONSTRAINT PK_ESTADO_DE_CONSERVACAO PRIMARY KEY (EDC_CODIGO);
ALTER TABLE ESTOQUE ADD CONSTRAINT PK_ESTOQUE PRIMARY KEY (ESTOQ_EMPRESA, ESTOQ_PRODUTO, ESTOQ_BLOCO, ESTOQ_PRATELEIRA, ESTOQ_CODIGO);
ALTER TABLE ESTOQ_MOVIMENTO ADD CONSTRAINT PK_ESTOQ_MOVIMENTO PRIMARY KEY (EM_EMPRESA, EM_PRODUTO, EM_BLOCO, EM_PRATELEIRA, EM_ESTOQUE, EM_CODIGO);
ALTER TABLE FATURAMENTO ADD CONSTRAINT PK_FATURAMENTO PRIMARY KEY (FAT_CODIGO_PEDIDO, FAT_PESSOA, FAT_EMPRESA);
ALTER TABLE FICHA_TECNICA ADD CONSTRAINT PK_FICHA_TECNICA PRIMARY KEY (FT_COD, FT_EMPRESA);
ALTER TABLE FORNEC_COTACAO ADD CONSTRAINT PK_FORNC_COTACAO PRIMARY KEY (FCT_EMPRESA, FCT_COTACAO, FCT_FORNECEDOR);
ALTER TABLE HISTORICO ADD CONSTRAINT PK_HISTORICO PRIMARY KEY (HIST_COD);
ALTER TABLE ITEM_NOTA_ENTRADA ADD CONSTRAINT PK_ITEM_NOTA_ENTRADA PRIMARY KEY (INE_EMPRESA, INE_NR_NOTA, INE_PESSOA, INE_PRODUTO);
ALTER TABLE ITENS_FICHA ADD CONSTRAINT PK_ITENS_FICHA PRIMARY KEY (IFT_FICHA, IFT_EMPRESA);
ALTER TABLE LANCAMENTOS ADD CONSTRAINT PK_LANCAMENTOS PRIMARY KEY (LANC_NR_LOTE);
ALTER TABLE LOCALIZACAO ADD CONSTRAINT PK_LOCALIZACAO PRIMARY KEY (LOC_CODIGO);
ALTER TABLE MANUTENCAO ADD CONSTRAINT PK_MANUTENCAO PRIMARY KEY (MAN_EMPRESA, MAN_CODIGO);
ALTER TABLE MARCAS ADD CONSTRAINT PK_MARCAS PRIMARY KEY (MARC_CODIGO);
ALTER TABLE NOTA_ENTRADA ADD CONSTRAINT PK_NOTA_ENTRADA PRIMARY KEY (NTE_EMPRESA, NTE_NR_NOTA, NTE_PESSOA);
ALTER TABLE ORDEM_PRODUCAO ADD CONSTRAINT PK_ORDEM_PRODUCAO PRIMARY KEY (OP_COD, OP_EMPRESA, OP_PRODUTO);
ALTER TABLE PEDIDOVENDA ADD CONSTRAINT PK_PEDIDOVENDA PRIMARY KEY (PED_NUMERO, PED_PESSOA, PED_EMPRESA, PED_DEPOSITO, PED_PRODUTO, PED_TIPOMOVIMENTACAO);
ALTER TABLE PEDIDO_COMPRA ADD CONSTRAINT PK_PEDCOMPRA PRIMARY KEY (PDC_EMPRESA, PDC_CODIGO);
ALTER TABLE PESSOAS ADD CONSTRAINT PK_PESSOA PRIMARY KEY (PESS_CODIGO);
ALTER TABLE PLANODECONTAS ADD CONSTRAINT PK_PLANODECONTAS PRIMARY KEY (PLN_COD_CONTA);
ALTER TABLE PRATELEIRA ADD CONSTRAINT PK_PRATELEIRA PRIMARY KEY (PRAT_EMPRESA, PRAT_BLOCO, PRAT_CODIGO);
ALTER TABLE PRODUCAO ADD CONSTRAINT PK_PRODUCAO PRIMARY KEY (PROD_COD, PROD_EMPRESA);
ALTER TABLE PRODUTOS ADD CONSTRAINT PK_PRODUTOS PRIMARY KEY (PRO_EMPRESA, PRO_CODIGO);
ALTER TABLE SOLICITACAO_COMPRA ADD CONSTRAINT PK_SOLICITACAO PRIMARY KEY (SOL_EMPRESA, SOL_CODIGO);
ALTER TABLE TIPOPAGAMENTO ADD CONSTRAINT PK_TIPOPAGAMENTO PRIMARY KEY (TPG_CODIGO);
ALTER TABLE TIPOS_ERROS ADD CONSTRAINT PK_TER_CODIGO PRIMARY KEY (TER_CODIGO);
ALTER TABLE TIPO_DE_BENS ADD CONSTRAINT PK_TIPO_DE_BENS PRIMARY KEY (TPB_CODIGO);
ALTER TABLE TITULOSP ADD CONSTRAINT PK_TITULOSP PRIMARY KEY (TTP_CODIGO, TTP_EMP_CODIGO);
ALTER TABLE TITULO_RECEBER ADD CONSTRAINT PK_TITULO_RECEBER PRIMARY KEY (TTR_CODIGO, TTR_EMP_CODIGO);
ALTER TABLE UNIDADE ADD CONSTRAINT PK_UNIDADE PRIMARY KEY (UN_CODIGO);


/******************************************************************************/
/***                              Foreign Keys                              ***/
/******************************************************************************/

ALTER TABLE BENS_IMOBILIZADOS ADD CONSTRAINT FK_BENS_EMPRESA FOREIGN KEY (BNI_EMPRESA) REFERENCES EMPRESA (EMP_COD);
ALTER TABLE BENS_IMOBILIZADOS ADD CONSTRAINT FK_BENS_ESTCONSERVACAO FOREIGN KEY (BNI_ESTADO_CONSERVACAO) REFERENCES ESTADO_DE_CONSERVACAO (EDC_CODIGO);
ALTER TABLE BENS_IMOBILIZADOS ADD CONSTRAINT FK_BENS_LOCALIZACAO FOREIGN KEY (BNI_LOCALIZACAO) REFERENCES LOCALIZACAO (LOC_CODIGO);
ALTER TABLE BENS_IMOBILIZADOS ADD CONSTRAINT FK_BENS_NOTA FOREIGN KEY (BNI_EMPRESA, BNI_NR_NOTA, BNI_FORNECEDOR) REFERENCES NOTA_ENTRADA (NTE_EMPRESA, NTE_NR_NOTA, NTE_PESSOA);
ALTER TABLE BENS_IMOBILIZADOS ADD CONSTRAINT FK_BENS_TIPO FOREIGN KEY (BNI_TIPO) REFERENCES TIPO_DE_BENS (TPB_CODIGO);
ALTER TABLE CENTRODECUSTO ADD CONSTRAINT FK_CENTRODECUSTO_1 FOREIGN KEY (CEC_COD_GRUPO) REFERENCES EMPRESA (EMP_COD);
ALTER TABLE CHAMADOS ADD CONSTRAINT FK_CHA_DEPARTAMENTO FOREIGN KEY (CHA_DEPARTAMENTO) REFERENCES DEPARTAMENTO (DEP_COD);
ALTER TABLE CHAMADOS ADD CONSTRAINT FK_CHA_EMPRESA FOREIGN KEY (CHA_EMPRESA) REFERENCES EMPRESA (EMP_COD);
ALTER TABLE CHAMADOS ADD CONSTRAINT FK_CHA_FUNCIONARIO FOREIGN KEY (CHA_FUNCIONARIO) REFERENCES PESSOAS (PESS_CODIGO);
ALTER TABLE CHAMADOS ADD CONSTRAINT FK_CHA_PROPRIETARIO FOREIGN KEY (CHA_PROPRIETARIO) REFERENCES PESSOAS (PESS_CODIGO);
ALTER TABLE CHAMADOS ADD CONSTRAINT FK_CHA_TIPO_ERRO FOREIGN KEY (CHA_TIPO_ERRO) REFERENCES TIPOS_ERROS (TER_CODIGO);
ALTER TABLE COMPONENTE ADD CONSTRAINT FK_COMPONENTE_MANUTENCAO FOREIGN KEY (COM_EMPRESA, COM_MANUTENCAO) REFERENCES MANUTENCAO (MAN_EMPRESA, MAN_CODIGO);
ALTER TABLE COMPONENTE ADD CONSTRAINT FK_COMPONENTE_PRODUTO FOREIGN KEY (COM_EMPRESA, COM_CODIGO) REFERENCES PRODUTOS (PRO_EMPRESA, PRO_CODIGO);
ALTER TABLE CONTABANCARIA ADD CONSTRAINT FK_PESSOA FOREIGN KEY (CTB_PESSOA) REFERENCES PESSOAS (PESS_CODIGO)
  USING INDEX REL_CTB_PESSOA;
ALTER TABLE CONTABANCARIA ADD CONSTRAINT REL_CTB_BANCO FOREIGN KEY (CTB_BAN_CODIGO) REFERENCES BANCO (BAN_CODIGO);
ALTER TABLE CONTABANCARIA ADD CONSTRAINT REL_CTB_EMPRESA FOREIGN KEY (CTB_EMP_CODIGO) REFERENCES EMPRESA (EMP_COD);
ALTER TABLE COTACAO ADD CONSTRAINT FK_COTACAO_DEPARTAMENTO FOREIGN KEY (COT_DEPARTAMENTO) REFERENCES DEPARTAMENTO (DEP_COD);
ALTER TABLE COTACAO ADD CONSTRAINT FK_COTACAO_EMPRESA FOREIGN KEY (COT_EMPRESA) REFERENCES EMPRESA (EMP_COD);
ALTER TABLE COTACAO ADD CONSTRAINT FK_COTACAO_PRODUTO FOREIGN KEY (COT_EMPRESA, COT_PRODUTO) REFERENCES PRODUTOS (PRO_EMPRESA, PRO_CODIGO);
ALTER TABLE COTACAO ADD CONSTRAINT FK_COTACAO_SOLICIT FOREIGN KEY (COT_EMPRESA, COT_SOLICITACAO_ORIGEM) REFERENCES SOLICITACAO_COMPRA (SOL_EMPRESA, SOL_CODIGO);
ALTER TABLE DEPARTAMENTO ADD CONSTRAINT FK_DEPARTAMENTO_1 FOREIGN KEY (DEP_EMPRESAR) REFERENCES EMPRESA (EMP_COD);
ALTER TABLE ENTREGA_MATERIA ADD CONSTRAINT FK_ENTREGA_MATERIA_1 FOREIGN KEY (EM0_PESSOA) REFERENCES PESSOAS (PESS_CODIGO);
ALTER TABLE ENTREGA_MATERIA ADD CONSTRAINT FK_PRODUCAO FOREIGN KEY (EM0_PRODUCAO, EM0_EMPRESA) REFERENCES PRODUCAO (PROD_COD, PROD_EMPRESA);
ALTER TABLE ESTOQUE ADD CONSTRAINT FK_ESTOQUE_BLOCO FOREIGN KEY (ESTOQ_EMPRESA, ESTOQ_BLOCO) REFERENCES BLOCO (BLOC_EMPRESA, BLOC_CODIGO);
ALTER TABLE ESTOQUE ADD CONSTRAINT FK_ESTOQUE_EMPRESA FOREIGN KEY (ESTOQ_EMPRESA) REFERENCES EMPRESA (EMP_COD);
ALTER TABLE ESTOQUE ADD CONSTRAINT FK_ESTOQUE_PRATELEIRA FOREIGN KEY (ESTOQ_EMPRESA, ESTOQ_BLOCO, ESTOQ_PRATELEIRA) REFERENCES PRATELEIRA (PRAT_EMPRESA, PRAT_BLOCO, PRAT_CODIGO);
ALTER TABLE ESTOQUE ADD CONSTRAINT FK_ESTOQUE_PRODUTO FOREIGN KEY (ESTOQ_EMPRESA, ESTOQ_PRODUTO) REFERENCES PRODUTOS (PRO_EMPRESA, PRO_CODIGO);
ALTER TABLE ESTOQ_MOVIMENTO ADD CONSTRAINT FK_EM_ESTOQUE FOREIGN KEY (EM_EMPRESA, EM_PRODUTO, EM_BLOCO, EM_PRATELEIRA, EM_ESTOQUE) REFERENCES ESTOQUE (ESTOQ_EMPRESA, ESTOQ_PRODUTO, ESTOQ_BLOCO, ESTOQ_PRATELEIRA, ESTOQ_CODIGO);
ALTER TABLE ESTOQ_MOVIMENTO ADD CONSTRAINT FK_REL_EM_EMPRESA FOREIGN KEY (EM_EMPRESA) REFERENCES EMPRESA (EMP_COD);
ALTER TABLE FICHA_TECNICA ADD CONSTRAINT REL_FICHA_TECNICA_PRODUTO FOREIGN KEY (FT_EMPRESA, FT_PRODUTO) REFERENCES PRODUTOS (PRO_EMPRESA, PRO_CODIGO);
ALTER TABLE FORNEC_COTACAO ADD CONSTRAINT FK_FORNC_COTACAO FOREIGN KEY (FCT_EMPRESA, FCT_COTACAO) REFERENCES COTACAO (COT_EMPRESA, COT_CODIGO);
ALTER TABLE FORNEC_COTACAO ADD CONSTRAINT FK_FORNC_PESSOA FOREIGN KEY (FCT_FORNECEDOR) REFERENCES PESSOAS (PESS_CODIGO);
ALTER TABLE FORNEC_COTACAO ADD CONSTRAINT FK_FORNC_UNMEDIDA FOREIGN KEY (FCT_UND_MEDIDA) REFERENCES UNIDADE (UN_CODIGO);
ALTER TABLE ITEM_NOTA_ENTRADA ADD CONSTRAINT FK_ITEM_NOTA FOREIGN KEY (INE_EMPRESA, INE_NR_NOTA, INE_PESSOA) REFERENCES NOTA_ENTRADA (NTE_EMPRESA, NTE_NR_NOTA, NTE_PESSOA);
ALTER TABLE ITEM_NOTA_ENTRADA ADD CONSTRAINT FK_ITEM_PRODUTO FOREIGN KEY (INE_EMPRESA, INE_PRODUTO) REFERENCES PRODUTOS (PRO_EMPRESA, PRO_CODIGO);
ALTER TABLE ITENS_FICHA ADD CONSTRAINT FK_ITENS_FICHA FOREIGN KEY (IFT_FICHA, IFT_EMPRESA) REFERENCES FICHA_TECNICA (FT_COD, FT_EMPRESA);
ALTER TABLE ITENS_FICHA ADD CONSTRAINT FK_ITENS_FICHA_1 FOREIGN KEY (IFT_EMPRESA, IFT_PRODUTO) REFERENCES PRODUTOS (PRO_EMPRESA, PRO_CODIGO);
ALTER TABLE LANCAMENTOS ADD CONSTRAINT FK_LANCAMENTOS_1 FOREIGN KEY (LANC_EMP) REFERENCES EMPRESA (EMP_COD);
ALTER TABLE MANUTENCAO ADD CONSTRAINT FK_MANUTENCAO_BENS FOREIGN KEY (MAN_EMPRESA, MAN_BEN, MAN_NUM_SERIE) REFERENCES BENS_IMOBILIZADOS (BNI_EMPRESA, BNI_CODIGO, BNI_NUM_SERIE);
ALTER TABLE NOTA_ENTRADA ADD CONSTRAINT FK_NOTA_EMPRESA FOREIGN KEY (NTE_EMPRESA) REFERENCES EMPRESA (EMP_COD);
ALTER TABLE NOTA_ENTRADA ADD CONSTRAINT FK_NOTA_PESSOA FOREIGN KEY (NTE_PESSOA) REFERENCES PESSOAS (PESS_CODIGO);
ALTER TABLE ORDEM_PRODUCAO ADD CONSTRAINT FK_ORDEM_PRODUCAO_1 FOREIGN KEY (OP_FICHATECNICA, OP_EMPRESA) REFERENCES FICHA_TECNICA (FT_COD, FT_EMPRESA);
ALTER TABLE ORDEM_PRODUCAO ADD CONSTRAINT FK_ORDEM_PRODUCAO_2 FOREIGN KEY (OP_DEPARTAMENTO) REFERENCES DEPARTAMENTO (DEP_COD);
ALTER TABLE PEDIDO_COMPRA ADD CONSTRAINT FK_PEDCOMPRA_COTACAO FOREIGN KEY (PDC_EMPRESA, PDC_COTACAO_ORIGEM) REFERENCES COTACAO (COT_EMPRESA, COT_CODIGO);
ALTER TABLE PEDIDO_COMPRA ADD CONSTRAINT FK_PEDCOMPRA_DEPARTAMENTO FOREIGN KEY (PDC_DEPARTAMENTO) REFERENCES DEPARTAMENTO (DEP_COD);
ALTER TABLE PEDIDO_COMPRA ADD CONSTRAINT FK_PEDCOMPRA_EMPRESA FOREIGN KEY (PDC_EMPRESA) REFERENCES EMPRESA (EMP_COD);
ALTER TABLE PEDIDO_COMPRA ADD CONSTRAINT FK_PEDCOMPRA_PESSOA FOREIGN KEY (PDC_FORNECEDOR) REFERENCES PESSOAS (PESS_CODIGO);
ALTER TABLE PEDIDO_COMPRA ADD CONSTRAINT FK_PEDCOMPRA_PRODUTO FOREIGN KEY (PDC_EMPRESA, PDC_PRODUTO) REFERENCES PRODUTOS (PRO_EMPRESA, PRO_CODIGO);
ALTER TABLE PEDIDO_COMPRA ADD CONSTRAINT FK_PEDCOMPRA_SOLICIT FOREIGN KEY (PDC_EMPRESA, PDC_SOLICITICAO_ORIGEM) REFERENCES SOLICITACAO_COMPRA (SOL_EMPRESA, SOL_CODIGO);
ALTER TABLE PEDIDO_COMPRA ADD CONSTRAINT FK_PEDCOMPRA_UNMEDIDA FOREIGN KEY (PDC_UNMEDIDA) REFERENCES UNIDADE (UN_CODIGO);
ALTER TABLE PEDIDO_COMPRA ADD CONSTRAINT FK_PEDIDO_CONDICAO_PGTO FOREIGN KEY (PDC_CONDICAO_PGTO) REFERENCES CONDICAOPAGAMENTO (CDP_CODIGO);
ALTER TABLE PRATELEIRA ADD CONSTRAINT FK_REL_PRAT_BLOCO FOREIGN KEY (PRAT_EMPRESA, PRAT_BLOCO) REFERENCES BLOCO (BLOC_EMPRESA, BLOC_CODIGO);
ALTER TABLE PRATELEIRA ADD CONSTRAINT FK_REL_PRAT_CATEGORIA FOREIGN KEY (PRAT_EMPRESA, PRAT_CATEGORIA) REFERENCES CATEGORIA (CAT_EMPRESA, CAT_CODIGO);
ALTER TABLE PRATELEIRA ADD CONSTRAINT FK_REL_PRAT_EMPRESA FOREIGN KEY (PRAT_EMPRESA) REFERENCES EMPRESA (EMP_COD);
ALTER TABLE PRODUCAO ADD CONSTRAINT FK_ORDEM FOREIGN KEY (PROD_ORDEM, PROD_EMPRESA, PROD_PRODUTO) REFERENCES ORDEM_PRODUCAO (OP_COD, OP_EMPRESA, OP_PRODUTO);
ALTER TABLE PRODUTOS ADD CONSTRAINT FK_PROMARC FOREIGN KEY (PRO_MARCA) REFERENCES MARCAS (MARC_CODIGO);
ALTER TABLE PRODUTOS ADD CONSTRAINT FK_REL_PRO_CATEGORIA FOREIGN KEY (PRO_EMPRESA, PRO_CATEGORIA) REFERENCES CATEGORIA (CAT_EMPRESA, CAT_CODIGO);
ALTER TABLE PRODUTOS ADD CONSTRAINT FK_REL_PRO_EMPRESA FOREIGN KEY (PRO_EMPRESA) REFERENCES EMPRESA (EMP_COD);
ALTER TABLE PRODUTOS ADD CONSTRAINT FK_REL_PRO_UNIDADE FOREIGN KEY (PRO_UNID) REFERENCES UNIDADE (UN_CODIGO);
ALTER TABLE SOLICITACAO_COMPRA ADD CONSTRAINT FK_SOLICITACAO_DEPARTAMENTO FOREIGN KEY (SOL_DEPARTAMENTO) REFERENCES DEPARTAMENTO (DEP_COD);
ALTER TABLE SOLICITACAO_COMPRA ADD CONSTRAINT FK_SOLICITACAO_EMPRESA FOREIGN KEY (SOL_EMPRESA) REFERENCES EMPRESA (EMP_COD);
ALTER TABLE SOLICITACAO_COMPRA ADD CONSTRAINT FK_SOLICITACAO_PRODUTO FOREIGN KEY (SOL_EMPRESA, SOL_PRODUTO) REFERENCES PRODUTOS (PRO_EMPRESA, PRO_CODIGO);
ALTER TABLE TITULOSP ADD CONSTRAINT REL_TTP_CONDICAO FOREIGN KEY (TTP_CON_CODIGO) REFERENCES CONDICAOPAGAMENTO (CDP_CODIGO);
ALTER TABLE TITULOSP ADD CONSTRAINT REL_TTP_CONTAB FOREIGN KEY (TTP_CTB_CODIGO) REFERENCES CONTABANCARIA (CTB_CODIGO);
ALTER TABLE TITULOSP ADD CONSTRAINT REL_TTP_EMPRESA FOREIGN KEY (TTP_EMP_CODIGO) REFERENCES EMPRESA (EMP_COD);
ALTER TABLE TITULOSP ADD CONSTRAINT REL_TTP_PESSOA FOREIGN KEY (TTP_PES_CODIGO) REFERENCES PESSOAS (PESS_CODIGO);
ALTER TABLE TITULO_RECEBER ADD CONSTRAINT REL_TTR_CONDICAO FOREIGN KEY (TTR_CON_CODIGO) REFERENCES CONDICAOPAGAMENTO (CDP_CODIGO);
ALTER TABLE TITULO_RECEBER ADD CONSTRAINT REL_TTR_CONTAB FOREIGN KEY (TTR_CTB_CODIGO) REFERENCES CONTABANCARIA (CTB_CODIGO);
ALTER TABLE TITULO_RECEBER ADD CONSTRAINT REL_TTR_EMPRESA FOREIGN KEY (TTR_EMP_CODIGO) REFERENCES EMPRESA (EMP_COD);
ALTER TABLE TITULO_RECEBER ADD CONSTRAINT REL_TTR_PESSOA FOREIGN KEY (TTR_PES_CODIGO) REFERENCES PESSOAS (PESS_CODIGO);


/******************************************************************************/
/***                                Triggers                                ***/
/******************************************************************************/


SET TERM ^ ;



/******************************************************************************/
/***                          Triggers for tables                           ***/
/******************************************************************************/



/* Trigger: CONDICAOPAGAMENTO_BI */
CREATE OR ALTER TRIGGER CONDICAOPAGAMENTO_BI FOR CONDICAOPAGAMENTO
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.cdp_codigo is null) then
    new.cdp_codigo = gen_id(gen_condicaopagamento_id,1);
end
^

/* Trigger: CONTABANCARIA_BI */
CREATE OR ALTER TRIGGER CONTABANCARIA_BI FOR CONTABANCARIA
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.ctb_codigo is null) then
    new.ctb_codigo = gen_id(gen_contabancaria_id,1);
end
^

/* Trigger: PESSOAS_BI */
CREATE OR ALTER TRIGGER PESSOAS_BI FOR PESSOAS
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.pess_codigo is null) then
    new.pess_codigo = gen_id(gen_pessoas_id,1);
end
^

/* Trigger: TIPOPAGAMENTO_BI */
CREATE OR ALTER TRIGGER TIPOPAGAMENTO_BI FOR TIPOPAGAMENTO
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.tpg_codigo is null) then
    new.tpg_codigo = gen_id(gen_tipopagamento_id,1);
end
^

/* Trigger: TITULOSP_BI */
CREATE OR ALTER TRIGGER TITULOSP_BI FOR TITULOSP
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.ttp_codigo is null) then
    new.ttp_codigo = gen_id(gen_titulosp_id,1);
end
^

/* Trigger: TITULO_RECEBER_BI */
CREATE OR ALTER TRIGGER TITULO_RECEBER_BI FOR TITULO_RECEBER
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.ttr_codigo is null) then
    new.ttr_codigo = gen_id(gen_titulo_receber_id,1);
end
^

SET TERM ; ^



/******************************************************************************/
/***                           Stored Procedures                            ***/
/******************************************************************************/


SET TERM ^ ;

CREATE OR ALTER PROCEDURE ESTOQUE_DELETA_TUDO
AS
begin
    delete from estoq_movimento;
    delete from estoque;
    delete from produtos;
    delete from prateleira;
    delete from bloco;
    delete from categoria;
    delete from marcas;
end^



SET TERM ; ^
